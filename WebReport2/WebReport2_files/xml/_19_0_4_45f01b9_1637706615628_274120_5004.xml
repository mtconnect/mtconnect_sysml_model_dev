<?xml version='1.0' encoding='UTF-8'?><magicdraw><package id="_19_0_4_45f01b9_1637706615628_274120_5004" refElementId="_19_0_4_45f01b9_1637706615628_274120_5004" humanType="Package" classType="Package" requireSort="node" icon="WebReport2_files/icon_package_315785478.svg"><documentation humanName="Documentation" mode="s">An {{term(agent)}} **MUST** provide a REST API {{term(API)}} supporting HTTP version 1.0 or greater.  This interface **MUST** support HTTP (RFC7230) and use URIs (RFC3986) to identify specific information requested from an {{term(agent)}}. 

The REST API adheres to the architectural principles of a stateless service to retrieve information associated with pieces of equipment. Additionally, the API is read-only and does not produce any side effects on the {{term(agent)}} or the equipment. In REST state management, the client is responsible for recovery in case of an error or loss of connection.

### HTTP Request

An {{term(agent)}} **MUST** support the `HTTP` `GET` verb, all other verbs are optional. See IETF RFC 7230 for a complete description of the HTTP request structure.

The HTTP uses Uniform Resource Identifiers (URI) as outlined in IETF RFC 3986 as the *request-target*. IETF RFC 7230 specifies the http URI scheme for the *request-target* as follows:

1. `protocol`: The protocol used for the request. Must be `http` or `https`.

2. `authority`: The network domain or address of the agent with an optional port.

3. `path`: A Hierarchical Identifier following a slash (`/`) and before the optional question-mark (`?`). The `path` separates segments by a slash (`/`).

4. `query`: The portion of the HTTP request following the question-mark (`?`). The query portion of the HTTP request is composed of key-value pairs, `&lt;key>=&lt;value>` separated by an ampersand (`&amp;`).

#### `path` Portion of an HTTP Request

The `path` portion of the *request-target* has the following segments:

* `device-name` or `uuid`: optional `name` or `uuid` of the {{block(Device)}}
* `request`: request, must be one of the following: (also see {{sect(Operations for Agent)}})
  - {{operation(REST Protocol::Agent::probe)}}
  - {{operation(REST Protocol::Agent::current)}}
  - {{operation(REST Protocol::Agent::sample)}}
  - {{operation(REST Protocol::Agent::asset)}}  or `assets`
    - {{operation(REST Protocol::Agent::asset)}} request has additional optional segment `&lt;asset ids>`
  
If `name` or `uuid` segement are not specified in the {{term(HTTP Request)}}, an {{term(agent)}} **MUST** return information for all pieces of equipment. The following sections will 

Examples: 
  
* `http://localhost:5000/my_device/probe`
  
    The request only provides information about `my_device`.
  
* `http://localhost:5000/probe`

  The request provides information for all devices. 

The following section specifies the details for each request.

### MTConnect REST API

An {{term(agent)}} **MUST** support {{termplural(probe request)}}, {{termplural(current request)}}, {{termplural(sample request)}}, and {{termplural(asset request)}}.

See the operations of the {{block(REST Protocol::Agent)}} for details regarding the {{termplural(request)}}.

### HTTP Errors

When an {{term(agent)}} receives an {{term(HTTP Request)}} that is incorrectly formatted or is not supported by the {{term(agent)}}, the {{term(agent)}} **MUST** publish an {{term(HTTP Error Message)}} which includes a specific status code from the tables above indicating that the {{term(request)}} could not be handled by the {{term(agent)}}.

Also, if the {{term(agent)}} experiences an internal error and is unable to provide the requested {{term(response document)}}, it **MUST** publish an {{term(HTTP Error Message)}} that includes a specific status code from the table above.

When an {{term(agent)}} encounters an error in interpreting or responding to an {{term(HTTP Request)}}, the {{term(agent)}} **MUST** also publish an {{term(MTConnectErrors Response Document)}} that provides additional details about the error.  See {{sect(Error Information Model)}} for details on the {{term(MTConnectErrors Response Document)}}.  

#### Streaming Data

HTTP {{term(data streaming)}} is a method for an {{term(agent)}} to provide a continuous stream of {{termplural(observation)}} in response to a single {{term(request)}} using a {{term(publish and subscribe)}} communication pattern.

When an {{term(HTTP Request)}} includes an `interval` parameter, an {{term(agent)}} **MUST** provide data with a minimum delay in milliseconds between the end of one data transmission and the beginning of the next.  A value of zero (0) for the `interval` parameter indicates that the {{term(agent)}} should deliver data at the highest rate possible and is only relevant for {{termplural(sample request)}} .

The format of the response **MUST** use an `x-multipart-replace` encoded message with each section separated by MIME boundaries.  Each section **MUST** contain an entire {{term(MTConnectStreams Response Document)}}. 

When streaming for a {{term(current request)}}, the {{term(agent)}} produces an {{term(MTConnectStreams Response Document)}} with the most current {{termplural(observation)}} every `interval` milliseconds.

When streaming for a {{term(sample request)}}, if there are no available {{termplural(observation)}} after the `interval` time elapsed, the {{term(agent)}} **MUST** wait for either the `heartbeat` time to elapse or an {{term(observation)}} arrives. If the `heartbeat` time elapses and no {{termplural(observation)}} arrive, then an empty {{term(MTConnectStreams Response Document)}} **MUST** be sent.

> Note: For more information on MIME, see IETF RFC 1521 and RFC 822.

An example of the format for an {{term(HTTP Request)}} that  includes an `interval` parameter is:

~~~~
http://localhost:5000/sample?interval=1000
~~~~
{: caption="Example for HTTP Request with interval parameter" label="example-for-http-request-with-interval-parameter"}

HTTP Response Header:

~~~~
HTTP/1.1 200 OK
Connection: close
Date: Sat, 13 Mar 2010 08:33:37 UTC
Status: 200 OK
Content-Disposition: inline
X-Runtime: 144ms
Content-Type: multipart/x-mixed-replace;boundary=
a8e12eced4fb871ac096a99bf9728425
Transfer-Encoding: chunked
~~~~
{: caption="HTTP Response header" label="http-response-header"}

Lines 1-9 in {{lst(http-response-header)}} represent a standard header for a MIME `multipart/x-mixed-replace` message.  The boundary is a separator for each section of the stream. Lines 7-8 indicate this is a multipart MIME message and the boundary between sections. 

With streaming protocols, the `Content-length` **MUST** be omitted and `Transfer-Encoding` **MUST** be set to `chunked` (line 9). See IETF RFC 7230 for a full description of the HTTP protocol and chunked encoding.

~~~~
--a8e12eced4fb871ac096a99bf9728425
Content-type: text/xml
Content-length: 887

&lt;?xml version="1.0" ecoding="UTF-8"?>
&lt;MTConnectStreams ...>...
~~~~
{: caption="HTTP Response header 2" label="http-response-header-2" start="last"}

Each section of the document begins with a boundary preceded by two hyphens (`--`). The `Content-type` and `Content-length` header fields **MUST** be provided for each section and **MUST** be followed by `&lt;CR>&lt;LF>&lt;CR>&lt;LF>` (ASCII code for `&lt;CR>` is 13 and `&lt;LF>` 10) before the {{term(XML)}} document. The header and the `&lt;CR>&lt;LF>&lt;CR>&lt;LF>` **MUST NOT** be included in the computation of the content length.

An {{term(agent)}} MUST continue to stream results until the client closes the connection. The {{term(agent)}} MUST NOT stop streaming for any reason other than the following:

* {{term(agent)}} process stops
* The client application stops receiving data

##### Heartbeat

When {{term(streaming data)}} is requested from a {{term(sample request)}}, an {{term(agent)}} **MUST** support a {{term(heartbeat)}} to indicate to a client application that the HTTP connection is still viable during times when there is no new data available to be published.  The {{term(heartbeat)}} is indicated by an {{term(agent)}} by sending an MTConnect {{term(response document)}} with an empty {{block(Steams)}} entity (See {{package(Observation Information Model)}} for more details on {{block(Streams)}}) to the client software application.

The {{term(heartbeat)}} **MUST** occur on a periodic basis given by the optional `heartbeat` query parameter and **MUST** default to 10 seconds.  An {{term(agent)}} **MUST** maintain a separate {{term(heartbeat)}} for each client application for which the {{term(agent)}} is responding to a {{term(data streaming)}} {{term(request)}}.

An {{term(agent)}} **MUST** begin calculating the interval for the time-period of the {{term(heartbeat)}} for each client application immediately after a {{term(response document)}} is published to that specific client application.

The {{term(heartbeat)}} remains in effect for each client software application until the {{term(data streaming)}} {{term(request)}} is terminated by either the {{term(agent)}} or the client application.

#### References

A {{block(Component)}} **MAY** include a set of {{block(Reference)}} entities of the following types that **MAY** alter the content of the {{termplural(MTConnectStreams Response Document)}} published in response to a {{term(current request)}} or a {{term(sample request)}} as specified:

* A {{term(Component)}} reference ({{block(ComponentRef)}}) modifies the set of {{termplural(Observation)}}, limited by a path query parameter of a {{term(current request)}} or {{term(sample request)}}, to include the {{termplural(Observation)}} associated with the entity whose value for its `id` attribute matches the value provided for the `idRef` attribute of the {{block(ComponentRef)}} element. Additionally, {{termplural(Observation)}} defined for any {{term(lower level)}} entity(s) associated with the identified entities **MUST** also be returned. The result is equivalent to appending `//[@id=&lt;"idRef">]` to the path query parameters of the {{term(current request)}} or {{term(sample request)}}. See {{package(Agent)}} for more details on path queries.

* A {{term(DataItem)}} reference ({{block(DataItemRef)}}) modifies the set of resulting {{termplural(Observation)}}, limited by a path query parameter of a {{term(current request)}} or {{term(sample request)}}, to include the {{termplural(Observation)}} whose value for its `id` attribute matches the value provided for the `idRef` attribute of the {{block(DataItemRef)}} element. The result is equivalent to appending `//[@id=&lt;"idRef">]` to the path query parameters of the {{term(current request)}} or {{term(sample request)}}. See {{package(Agent)}} for more details on path queries.
</documentation><visibility humanName="Visibility">public</visibility><qualifiedName humanName="Qualified Name" mode="e">Fundamentals::MTConnect Protocol::REST Protocol</qualifiedName><packagedElement humanName="Packaged Element"><block refid="_19_0_4_45f01b9_1637708823096_359717_5786" refElementId="_19_0_4_45f01b9_1637708823096_359717_5786" humanType="Block" classType="Class" name="Agent" hasDiagram="true" icon="WebReport2_files/icon_block_372104210.svg"/><collaboration refid="_19_0_4_45f01b9_1637706667837_324473_5008" refElementId="_19_0_4_45f01b9_1637706667837_324473_5008" humanType="Collaboration" classType="Collaboration" name="Behavior" icon="WebReport2_files/icon_collaboration_1782324054.svg"/><association refid="_19_0_3_68e0225_1650454551622_255448_221" refElementId="_19_0_3_68e0225_1650454551622_255448_221" humanType="Association" classType="Association" name="buffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><association refid="_19_0_3_68e0225_1650454644566_289311_244" refElementId="_19_0_3_68e0225_1650454644566_289311_244" humanType="Association" classType="Association" name="assetBuffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/></packagedElement><owningPackage refid="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" refElementId="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" humanType="Package" classType="Package" name="MTConnect Protocol" icon="WebReport2_files/icon_package_315785478.svg" humanName="Owning Package"/><owner refid="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" refElementId="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" humanType="Package" classType="Package" name="MTConnect Protocol" icon="WebReport2_files/icon_package_315785478.svg" humanName="Owner" mode="s,e"/><ownedType humanName="Owned Type"><block refid="_19_0_4_45f01b9_1637708823096_359717_5786" refElementId="_19_0_4_45f01b9_1637708823096_359717_5786" humanType="Block" classType="Class" name="Agent" hasDiagram="true" icon="WebReport2_files/icon_block_372104210.svg"/><collaboration refid="_19_0_4_45f01b9_1637706667837_324473_5008" refElementId="_19_0_4_45f01b9_1637706667837_324473_5008" humanType="Collaboration" classType="Collaboration" name="Behavior" icon="WebReport2_files/icon_collaboration_1782324054.svg"/><association refid="_19_0_3_68e0225_1650454551622_255448_221" refElementId="_19_0_3_68e0225_1650454551622_255448_221" humanType="Association" classType="Association" name="buffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><association refid="_19_0_3_68e0225_1650454644566_289311_244" refElementId="_19_0_3_68e0225_1650454644566_289311_244" humanType="Association" classType="Association" name="assetBuffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/></ownedType><ownedMember humanName="Owned Member"><block refid="_19_0_4_45f01b9_1637708823096_359717_5786" refElementId="_19_0_4_45f01b9_1637708823096_359717_5786" humanType="Block" classType="Class" name="Agent" hasDiagram="true" icon="WebReport2_files/icon_block_372104210.svg"/><collaboration refid="_19_0_4_45f01b9_1637706667837_324473_5008" refElementId="_19_0_4_45f01b9_1637706667837_324473_5008" humanType="Collaboration" classType="Collaboration" name="Behavior" icon="WebReport2_files/icon_collaboration_1782324054.svg"/><association refid="_19_0_3_68e0225_1650454551622_255448_221" refElementId="_19_0_3_68e0225_1650454551622_255448_221" humanType="Association" classType="Association" name="buffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><association refid="_19_0_3_68e0225_1650454644566_289311_244" refElementId="_19_0_3_68e0225_1650454644566_289311_244" humanType="Association" classType="Association" name="assetBuffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><diagram refid="_19_0_4_45f01b9_1637708818097_354447_5745" refElementId="_19_0_4_45f01b9_1637708818097_354447_5745" humanType="Diagram" classType="Diagram" name="REST Protocol" diagramType="SysML Block Definition Diagram" icon="WebReport2_files/icon_SysML Block Definition Diagram_718153409.svg"/></ownedMember><ownedElement humanName="Owned Element"><block refid="_19_0_4_45f01b9_1637708823096_359717_5786" refElementId="_19_0_4_45f01b9_1637708823096_359717_5786" humanType="Block" classType="Class" name="Agent" hasDiagram="true" icon="WebReport2_files/icon_block_372104210.svg"/><collaboration refid="_19_0_4_45f01b9_1637706667837_324473_5008" refElementId="_19_0_4_45f01b9_1637706667837_324473_5008" humanType="Collaboration" classType="Collaboration" name="Behavior" icon="WebReport2_files/icon_collaboration_1782324054.svg"/><association refid="_19_0_3_68e0225_1650454551622_255448_221" refElementId="_19_0_3_68e0225_1650454551622_255448_221" humanType="Association" classType="Association" name="buffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><association refid="_19_0_3_68e0225_1650454644566_289311_244" refElementId="_19_0_3_68e0225_1650454644566_289311_244" humanType="Association" classType="Association" name="assetBuffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><diagram refid="_19_0_4_45f01b9_1637708818097_354447_5745" refElementId="_19_0_4_45f01b9_1637708818097_354447_5745" humanType="Diagram" classType="Diagram" name="REST Protocol" diagramType="SysML Block Definition Diagram" icon="WebReport2_files/icon_SysML Block Definition Diagram_718153409.svg"/><comment refid="_19_0_4_45f01b9_1643673948410_66335_78" refElementId="_19_0_4_45f01b9_1643673948410_66335_78" humanType="Comment" classType="Comment" name="An {{term(agent)}} **MUST** provide a REST API {{t..." icon="WebReport2_files/icon_comment_895580618.svg"/></ownedElement><ownedDiagram humanName="Owned Diagram"><diagram refid="_19_0_4_45f01b9_1637708818097_354447_5745" refElementId="_19_0_4_45f01b9_1637708818097_354447_5745" humanType="Diagram" classType="Diagram" name="REST Protocol" diagramType="SysML Block Definition Diagram" icon="WebReport2_files/icon_SysML Block Definition Diagram_718153409.svg"/></ownedDiagram><ownedComment humanName="Owned Comment"><comment refid="_19_0_4_45f01b9_1643673948410_66335_78" refElementId="_19_0_4_45f01b9_1643673948410_66335_78" humanType="Comment" classType="Comment" name="An {{term(agent)}} **MUST** provide a REST API {{t..." icon="WebReport2_files/icon_comment_895580618.svg"/></ownedComment><nestingPackage refid="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" refElementId="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" humanType="Package" classType="Package" name="MTConnect Protocol" icon="WebReport2_files/icon_package_315785478.svg" humanName="Nesting Package"/><namespace refid="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" refElementId="EAPK_50B7711E_30AA_4a94_9F73_C74061BA099D" humanType="Package" classType="Package" name="MTConnect Protocol" icon="WebReport2_files/icon_package_315785478.svg" humanName="Namespace"/><name humanName="Name" mode="s,e">REST Protocol</name><member humanName="Member"><block refid="_19_0_4_45f01b9_1637708823096_359717_5786" refElementId="_19_0_4_45f01b9_1637708823096_359717_5786" humanType="Block" classType="Class" name="Agent" hasDiagram="true" icon="WebReport2_files/icon_block_372104210.svg"/><collaboration refid="_19_0_4_45f01b9_1637706667837_324473_5008" refElementId="_19_0_4_45f01b9_1637706667837_324473_5008" humanType="Collaboration" classType="Collaboration" name="Behavior" icon="WebReport2_files/icon_collaboration_1782324054.svg"/><association refid="_19_0_3_68e0225_1650454551622_255448_221" refElementId="_19_0_3_68e0225_1650454551622_255448_221" humanType="Association" classType="Association" name="buffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><association refid="_19_0_3_68e0225_1650454644566_289311_244" refElementId="_19_0_3_68e0225_1650454644566_289311_244" humanType="Association" classType="Association" name="assetBuffer" isRelationship="true" icon="WebReport2_files/icon_association_1770950012.svg"/><diagram refid="_19_0_4_45f01b9_1637708818097_354447_5745" refElementId="_19_0_4_45f01b9_1637708818097_354447_5745" humanType="Diagram" classType="Diagram" name="REST Protocol" diagramType="SysML Block Definition Diagram" icon="WebReport2_files/icon_SysML Block Definition Diagram_718153409.svg"/></member><URI humanName="URI" mode="s,e"></URI><TO_DO humanName="To Do" mode="s,e"></TO_DO><ActiveHyperlink humanName="Active Hyperlink" mode="e"></ActiveHyperlink><report_appliedStereotype_tags humanName="Applied Stereotype" requireSort="element" mode="s,e"/></package></magicdraw>