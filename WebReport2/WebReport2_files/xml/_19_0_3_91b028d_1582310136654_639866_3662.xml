<?xml version='1.0' encoding='UTF-8'?><magicdraw><constraint id="_19_0_3_91b028d_1582310136654_639866_3662" refElementId="_19_0_3_91b028d_1582310136654_639866_3662" humanType="Constraint" classType="Constraint" requireSort="node" icon="WebReport2_files/icon_constraint_1400979201.svg"><visibility humanName="Visibility">public</visibility><specification refid="_19_0_3_91b028d_1582310136655_42298_3663" refElementId="_19_0_3_91b028d_1582310136655_42298_3663" humanType="Opaque Expression" classType="OpaqueExpression" name="var outx,outy,outz,outux,outuy,outuz; var anglist = angin.split('|||'); var ux,uy,uz,angle,vector;  var xu2,yu2,zu2,xt2,yt2,zt2; xu2 = xu; yu2 = yu; zu2 = zu; xt2 = xt; yt2 = yt; zt2 = zt;                                                                                  if(anglist.length >= 2) {   anglist.pop();   for (var i = 0; i &lt; anglist.length; i++) {     angle = parseFloat(anglist[i].split('|')[0]);     vector = anglist[i].split('|')[1];     ux = parseFloat(vector.split(',')[0]);     uy = parseFloat(vector.split(',')[1]);     uz = parseFloat(vector.split(',')[2]);      outx = xt2*Math.cos(angle*Math.PI/180) + (uy*zt2 -uz*yt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*ux;     outy = yt2*Math.cos(angle*Math.PI/180) + (uz*xt2 -ux*zt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uy;     outz = zt2*Math.cos(angle*Math.PI/180) + (ux*yt2 -uy*xt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uz;     xt2 = outx     yt2 = outy     zt2 = outz        outux = xu2*Math.cos(angle*Math.PI/180) + (uy*zu2 -uz*yu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*ux;     outuy = yu2*Math.cos(angle*Math.PI/180) + (uz*xu2 -ux*zu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uy;     outuz = zu2*Math.cos(angle*Math.PI/180) + (ux*yu2 -uy*xu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uz;     xu2 = outux     yu2 = outuy     zu2 = outuz }             }   xout = xin + xt2; yout = yin + yt2; zout = zin + zt2;   aout = ain + xr + ang*xu; bout = bin + yr + ang*yu; cout = cin + zr + ang*zu;  var angles = ''; if(ang != 0) {  angles = angin + ang.toString()+'|'+xu2.toString()+ ','+yu2.toString()+ ','+zu2.toString() + '|||';   angout = angles;                                                                                 } else if(ang == 0){ angout = angin; }" text="var outx,outy,outz,outux,outuy,outuz;&#xa;var anglist = angin.split('|||');&#xa;var ux,uy,uz,angle,vector;&#xa;&#xa;var xu2,yu2,zu2,xt2,yt2,zt2;&#xa;xu2 = xu;&#xa;yu2 = yu;&#xa;zu2 = zu;&#xa;xt2 = xt;&#xa;yt2 = yt;&#xa;zt2 = zt;                                  &#xa;                               &#xa;              &#xa;if(anglist.length >= 2) {&#xa;  anglist.pop();&#xa;  for (var i = 0; i &lt; anglist.length; i++) {&#xa;    angle = parseFloat(anglist[i].split('|')[0]);&#xa;    vector = anglist[i].split('|')[1];&#xa;    ux = parseFloat(vector.split(',')[0]);&#xa;    uy = parseFloat(vector.split(',')[1]);&#xa;    uz = parseFloat(vector.split(',')[2]);&#xa;&#xa;    outx = xt2*Math.cos(angle*Math.PI/180) + (uy*zt2 -uz*yt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*ux;&#xa;    outy = yt2*Math.cos(angle*Math.PI/180) + (uz*xt2 -ux*zt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uy;&#xa;    outz = zt2*Math.cos(angle*Math.PI/180) + (ux*yt2 -uy*xt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uz;&#xa;    xt2 = outx&#xa;    yt2 = outy&#xa;    zt2 = outz&#xa;  &#xa;    outux = xu2*Math.cos(angle*Math.PI/180) + (uy*zu2 -uz*yu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*ux;&#xa;    outuy = yu2*Math.cos(angle*Math.PI/180) + (uz*xu2 -ux*zu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uy;&#xa;    outuz = zu2*Math.cos(angle*Math.PI/180) + (ux*yu2 -uy*xu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uz;&#xa;    xu2 = outux&#xa;    yu2 = outuy&#xa;    zu2 = outuz&#xa;}           &#xa;&#xa;}&#xa;&#xa;&#xa;xout = xin + xt2;&#xa;yout = yin + yt2;&#xa;zout = zin + zt2; &#xa;&#xa;aout = ain + xr + ang*xu;&#xa;bout = bin + yr + ang*yu;&#xa;cout = cin + zr + ang*zu;&#xa;&#xa;var angles = '';&#xa;if(ang != 0) { &#xa;angles = angin + ang.toString()+'|'+xu2.toString()+ ','+yu2.toString()+ ','+zu2.toString() + '|||';  &#xa;angout = angles;                                                                                &#xa;} else if(ang == 0){&#xa;angout = angin;&#xa;}" icon="WebReport2_files/icon_opaqueexpression_445013695.svg" humanName="Specification" mode="s,e"/><qualifiedName humanName="Qualified Name" mode="e">WIP: Device Examples::Kinematics Simulation::XArm7Model::Transformation::constraints</qualifiedName><owner refid="_19_0_3_91b028d_1582233160564_921570_689" refElementId="_19_0_3_91b028d_1582233160564_921570_689" humanType="Constraint Block" classType="Class" name="Transformation" icon="WebReport2_files/icon_constraintblock_1151173889.svg" humanName="Owner" mode="s,e"/><ownedElement humanName="Owned Element"><opaqueexpression refid="_19_0_3_91b028d_1582310136655_42298_3663" refElementId="_19_0_3_91b028d_1582310136655_42298_3663" humanType="Opaque Expression" classType="OpaqueExpression" name="var outx,outy,outz,outux,outuy,outuz; var anglist = angin.split('|||'); var ux,uy,uz,angle,vector;  var xu2,yu2,zu2,xt2,yt2,zt2; xu2 = xu; yu2 = yu; zu2 = zu; xt2 = xt; yt2 = yt; zt2 = zt;                                                                                  if(anglist.length >= 2) {   anglist.pop();   for (var i = 0; i &lt; anglist.length; i++) {     angle = parseFloat(anglist[i].split('|')[0]);     vector = anglist[i].split('|')[1];     ux = parseFloat(vector.split(',')[0]);     uy = parseFloat(vector.split(',')[1]);     uz = parseFloat(vector.split(',')[2]);      outx = xt2*Math.cos(angle*Math.PI/180) + (uy*zt2 -uz*yt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*ux;     outy = yt2*Math.cos(angle*Math.PI/180) + (uz*xt2 -ux*zt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uy;     outz = zt2*Math.cos(angle*Math.PI/180) + (ux*yt2 -uy*xt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uz;     xt2 = outx     yt2 = outy     zt2 = outz        outux = xu2*Math.cos(angle*Math.PI/180) + (uy*zu2 -uz*yu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*ux;     outuy = yu2*Math.cos(angle*Math.PI/180) + (uz*xu2 -ux*zu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uy;     outuz = zu2*Math.cos(angle*Math.PI/180) + (ux*yu2 -uy*xu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uz;     xu2 = outux     yu2 = outuy     zu2 = outuz }             }   xout = xin + xt2; yout = yin + yt2; zout = zin + zt2;   aout = ain + xr + ang*xu; bout = bin + yr + ang*yu; cout = cin + zr + ang*zu;  var angles = ''; if(ang != 0) {  angles = angin + ang.toString()+'|'+xu2.toString()+ ','+yu2.toString()+ ','+zu2.toString() + '|||';   angout = angles;                                                                                 } else if(ang == 0){ angout = angin; }" text="var outx,outy,outz,outux,outuy,outuz;&#xa;var anglist = angin.split('|||');&#xa;var ux,uy,uz,angle,vector;&#xa;&#xa;var xu2,yu2,zu2,xt2,yt2,zt2;&#xa;xu2 = xu;&#xa;yu2 = yu;&#xa;zu2 = zu;&#xa;xt2 = xt;&#xa;yt2 = yt;&#xa;zt2 = zt;                                  &#xa;                               &#xa;              &#xa;if(anglist.length >= 2) {&#xa;  anglist.pop();&#xa;  for (var i = 0; i &lt; anglist.length; i++) {&#xa;    angle = parseFloat(anglist[i].split('|')[0]);&#xa;    vector = anglist[i].split('|')[1];&#xa;    ux = parseFloat(vector.split(',')[0]);&#xa;    uy = parseFloat(vector.split(',')[1]);&#xa;    uz = parseFloat(vector.split(',')[2]);&#xa;&#xa;    outx = xt2*Math.cos(angle*Math.PI/180) + (uy*zt2 -uz*yt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*ux;&#xa;    outy = yt2*Math.cos(angle*Math.PI/180) + (uz*xt2 -ux*zt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uy;&#xa;    outz = zt2*Math.cos(angle*Math.PI/180) + (ux*yt2 -uy*xt2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xt2+uy*yt2+uz*zt2)*uz;&#xa;    xt2 = outx&#xa;    yt2 = outy&#xa;    zt2 = outz&#xa;  &#xa;    outux = xu2*Math.cos(angle*Math.PI/180) + (uy*zu2 -uz*yu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*ux;&#xa;    outuy = yu2*Math.cos(angle*Math.PI/180) + (uz*xu2 -ux*zu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uy;&#xa;    outuz = zu2*Math.cos(angle*Math.PI/180) + (ux*yu2 -uy*xu2)*Math.sin(angle*Math.PI/180) + (1-Math.cos(angle*Math.PI/180))*(ux*xu2+uy*yu2+uz*zu2)*uz;&#xa;    xu2 = outux&#xa;    yu2 = outuy&#xa;    zu2 = outuz&#xa;}           &#xa;&#xa;}&#xa;&#xa;&#xa;xout = xin + xt2;&#xa;yout = yin + yt2;&#xa;zout = zin + zt2; &#xa;&#xa;aout = ain + xr + ang*xu;&#xa;bout = bin + yr + ang*yu;&#xa;cout = cin + zr + ang*zu;&#xa;&#xa;var angles = '';&#xa;if(ang != 0) { &#xa;angles = angin + ang.toString()+'|'+xu2.toString()+ ','+yu2.toString()+ ','+zu2.toString() + '|||';  &#xa;angout = angles;                                                                                &#xa;} else if(ang == 0){&#xa;angout = angin;&#xa;}" icon="WebReport2_files/icon_opaqueexpression_445013695.svg"/></ownedElement><namespace refid="_19_0_3_91b028d_1582233160564_921570_689" refElementId="_19_0_3_91b028d_1582233160564_921570_689" humanType="Constraint Block" classType="Class" name="Transformation" icon="WebReport2_files/icon_constraintblock_1151173889.svg" humanName="Namespace"/><name humanName="Name" mode="s,e">constraints</name><documentation humanName="Documentation"></documentation><context refid="_19_0_3_91b028d_1582233160564_921570_689" refElementId="_19_0_3_91b028d_1582233160564_921570_689" humanType="Constraint Block" classType="Class" name="Transformation" icon="WebReport2_files/icon_constraintblock_1151173889.svg" humanName="Context"/><constrainedElement humanName="Constrained Element" mode="s,e"><constraintblock refid="_19_0_3_91b028d_1582233160564_921570_689" refElementId="_19_0_3_91b028d_1582233160564_921570_689" humanType="Constraint Block" classType="Class" name="Transformation" icon="WebReport2_files/icon_constraintblock_1151173889.svg"/></constrainedElement><TO_DO humanName="To Do" mode="s,e"></TO_DO><ActiveHyperlink humanName="Active Hyperlink"></ActiveHyperlink><report_appliedStereotype_tags humanName="Applied Stereotype" requireSort="element" mode="e"/></constraint></magicdraw>